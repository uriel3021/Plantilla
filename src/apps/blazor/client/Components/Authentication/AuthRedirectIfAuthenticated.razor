@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

@if (!_completed && _checking)
{
    <div class="auth-msg">Comprobando estado de sesión...</div>
}

@code {
    private bool _completed;
    private bool _checking = true;
    private int _attempts;
    private const int MaxAttempts = 40; // ~4s si intervalo 100ms
    private readonly TimeSpan _interval = TimeSpan.FromMilliseconds(100);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _ = LoopAsync();
        }
    }

    private async Task LoopAsync()
    {
        while (!_completed && _attempts < MaxAttempts)
        {
            _attempts++;
            var state = await AuthStateProvider.GetAuthenticationStateAsync();
            if (state.User.Identity?.IsAuthenticated == true)
            {
                _completed = true;
                Nav.NavigateTo("/");
                return;
            }
            await Task.Delay(_interval);
        }
        _checking = false; // dejó de intentar
        StateHasChanged();
    }
}
